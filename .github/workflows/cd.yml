name: CD

on:
  push:
    branches: ["kubernetes"]
  pull_request:
    types: [opened, synchronize]

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      ACR_NAME: g3Registry
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
      DOCKER_COMPOSE_FILE: docker-compose.yml
      COMMIT_HASH: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build docker images
        run: |
          DOCKER_BUILDKIT=1 docker-compose -f ${{ env.DOCKER_COMPOSE_FILE }} build --parallel

      - name: Push Docker images to ACR
        run: |
          docker tag upload-service:latest ${{ env.ACR_NAME }}.azurecr.io/upload-service:${{ env.COMMIT_HASH }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/upload-service:${{ env.COMMIT_HASH }}

          docker tag user-service:latest ${{ env.ACR_NAME }}.azurecr.io/user-service:${{ env.COMMIT_HASH }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/user-service:${{ env.COMMIT_HASH }}

          docker tag post-service:latest ${{ env.ACR_NAME }}.azurecr.io/post-service:${{ env.COMMIT_HASH }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/post-service:${{ env.COMMIT_HASH }}

          docker tag comment-service:latest ${{ env.ACR_NAME }}.azurecr.io/comment-service:${{ env.COMMIT_HASH }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/comment-service:${{ env.COMMIT_HASH }}

  deploy:
    runs-on: ubuntu-latest
    needs: publish
    env:
      COMMIT_HASH: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to AKS
        working-directory: k8s
        env:
          KUBECONFIG_FILE: kubeconfig.yaml
        run: |
          echo "${{ secrets.KUBECONFIG }}" > ${{ env.KUBECONFIG_FILE }}
          export KUBECONFIG=${{ env.KUBECONFIG_FILE }}
          sed -i 's/CICD_PLACEHOLDER/${{ env.COMMIT_HASH }}/' kustomization.yaml
          kubectl kustomize . | kubectl apply -f -
